services:
  # Servicio de base de datos PostgreSQL para Odoo
  db:
    image: postgres:16
    environment:
      - LANG=C.UTF-8
      - LC_ALL=C.UTF-8
      - POSTGRES_DB=odoodb
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_USER=odoo
    volumes:
      - odoo-db-data:/var/lib/postgresql/data
    ports:
      - '5432:5432' # Map container port 5432 to host port 5432
    networks:
      - odoo-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U odoo -d odoodb']
      interval: 10s
      timeout: 5s
      retries: 5

  # Servicio de Odoo
  odoo:
    build: .
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '8069:8069'
    volumes:
      - ./addons:/opt/odoo/addons
      # - ./odoo:/opt/odoo  # This mount hides the odoo-bin copied in Dockerfile
      - ./setup:/opt/odoo/setup
      - odoo-web-data:/opt/odoo/web
      - ./odoo/odoo.conf:/opt/odoo/.odoorc
      - odoo-config:/opt/odoo/config
      - odoo-extra-addons:/opt/odoo/extra-addons
      - odoo-filestore-data:/opt/odoo/.local/share/Odoo # Persist filestore
    environment:
      - HOST=db
      - USER=odoo
      - PASSWORD=odoo
      - DATABASE=odoodb
      - TZ=Europe/Madrid
      - HOME=/opt/odoo
    networks:
      - odoo-network
    restart: unless-stopped

  # Servicio de Xata Agent
  xata-agent:
    build:
      context: /home/miguel/dev/agents/xata-agent
    environment:
      DATABASE_URL: postgresql://odoo:odoo@db:5432/odoodb
      NODE_ENV: production
      AUTH_TRUST_HOST: ${AUTH_TRUST_HOST:-localhost}
      AUTH_SECRET: ${AUTH_SECRET} # Pass AUTH_SECRET explicitly
    env_file:
      - /home/miguel/dev/agents/xata-agent/.env.production
    ports:
      - '8080:8080'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - odoo-network
    volumes:
      - /home/miguel/dev/agents/xata-agent:/app # Montar el c√≥digo para reflejar cambios en caliente si lo necesitas

volumes:
  odoo-db-data:
  odoo-web-data:
  odoo-config:
  odoo-extra-addons:
  odoo-filestore-data: # Define filestore volume

networks:
  odoo-network:
    driver: bridge
